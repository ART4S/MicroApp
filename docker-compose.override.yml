version: '3.4'

services:

  rabbitmq:
   container_name: rabbitmq
   ports:
    - "15672:15672"

  identity-data:
   container_name: identity-data
   environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=${SA_PASSWORD}
   ports:
    - "1435:1433"
   volumes:
    - microshop-identity-data:/var/opt/mssql

  identity-api:
   container_name: identity-api
   build:
    context: .
    dockerfile: Services/Identity/Identity.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
    - ASPNETCORE_ENVIRONMENT=Development
    - ASPNETCORE_URLS=http://+:80
    - ConnectionStrings__DefaultConnection=Server=identity-data;Database=identity_db;User Id=sa;Password=${SA_PASSWORD};
    - ClearDatabase=${CLEAR_DATABASE}
    - AuthSettings__IssuerUri=http://identity-api
    - ClientsSettings__Spa__RedirectUris__0=http://localhost:4000/api/auth/callback
   ports:
    - "4000:80"
  
  web-api:
   image: web-api:dev
   container_name: web-api
   build:
    context: .
    dockerfile: ApiGateways/Web.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=https://+:443;http://+:80
     - ExternalUrls__Identity__BasePath=http://identity-api
     - ExternalUrls__Catalog__BasePath=http://catalog-api
     - ExternalUrls__Basket__BasePath=http://basket-api:5003
     - ExternalUrls__Ordering__BasePath=http://ordering-api
     - IdentityHC=http://identity-api/hc
     - CatalogHC=http://catalog-api/hc
     - BasketHC=http://basket-api/hc
     - OrderingHC=http://ordering-api/hc
     - PaymentHC=http://payment-api/hc
   ports:
    - 5000:80

  catalog-data:
    container_name: catalog-data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
     - microshop-catalog-data:/data/db

  catalog-integration-data:
   container_name: catalog-integration-data
   environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=${SA_PASSWORD}
   ports:
    - "1436:1433"
   volumes:
    - microshop-catalog-integration-data:/var/opt/mssql

  catalog-api:
    image: catalog-api:dev
    container_name: catalog-api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      args:
       BUILD_MODE: Debug
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - CatalogDbSettings__ConnectionString=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@catalog-data:27017
      - CatalogDbSettings__DatabaseName=catalog_db
      - RabbitMQSettings__ClientName=Catalog,
      - RabbitMQSettings__Uri=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq
      - RabbitMQSettings__Retries=3
      - ClearDatabase=${CLEAR_DATABASE}
    ports:
      - "5001:80"

  basket-data:
   container_name: basket-data
   ports:
     - "6379:6379"
   volumes:
     - microshop-basket-data:/data

  basket-api:
   image: basket-api:dev
   container_name: basket-api
   build:
    context: .
    dockerfile: Services/Basket/Basket.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - ConnectionStrings__RedisConnection=basket-data,allowAdmin=true
     - RabbitMQSettings__ClientName=Basket,
     - RabbitMQSettings__Uri=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq
     - RabbitMQSettings__Retries=3
     - ClearDatabase=${CLEAR_DATABASE}
     - HttpPort=80
     - GrpcPort=5003
   ports:
     - "5002:80"
     - "5003:5003"

  ordering-data:
   container_name: ordering-data
   environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=${SA_PASSWORD}
   ports:
    - "1434:1433"
   volumes:
    - microshop-ordering-data:/var/opt/mssql

  ordering-api:
   image: ordering-api:dev
   container_name: ordering-api
   build:
    context: .
    dockerfile: Services/Ordering/Ordering.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - ConnectionStrings__DefaultConnection=Server=ordering-data;Database=ordering_db;User Id=sa;Password=${SA_PASSWORD};Persist Security Info=true;
     - RabbitMQSettings__ClientName=Ordering,
     - RabbitMQSettings__Uri=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq
     - RabbitMQSettings__Retries=3
     - ClearDatabase=${CLEAR_DATABASE}
     - IdentityUrl=http://identity-api
   ports:
    - "5004:80"

  ordering-signalr:
   image: ordering-signalr:dev
   container_name: ordering-signalr
   build:
    context: .
    dockerfile: Services/Ordering/Ordering.SignalR/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - RabbitMQSettings__ClientName=Ordering.SignalR,
     - RabbitMQSettings__Uri=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq
     - RabbitMQSettings__Retries=3
     - IdentityUrl=http://identity-api
   ports:
    - "5005:80"

  payment-api:
   image: payment-api:dev
   container_name: payment-api
   build:
    context: .
    dockerfile: Services/Payment/Payment.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - RabbitMQSettings__ClientName=Payment,
     - RabbitMQSettings__Uri=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq
     - RabbitMQSettings__Retries=3
   ports:
    - "5006:80"

  health-monitor:
   image: health-monitor:dev
   container_name: health-monitor
   build:
    context: .
    dockerfile: Clients/WebHealthMonitor/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - HealthChecksUI__HealthChecks__0__Name=Web API
     - HealthChecksUI__HealthChecks__0__Uri=http://web-api/hc
     - HealthChecksUI__HealthChecks__1__Name=Identity API
     - HealthChecksUI__HealthChecks__1__Uri=http://identity-api/hc
     - HealthChecksUI__HealthChecks__2__Name=Catalog API
     - HealthChecksUI__HealthChecks__2__Uri=http://catalog-api/hc
     - HealthChecksUI__HealthChecks__3__Name=Basket API
     - HealthChecksUI__HealthChecks__3__Uri=http://basket-api/hc
     - HealthChecksUI__HealthChecks__4__Name=Ordering API
     - HealthChecksUI__HealthChecks__4__Uri=http://ordering-api/hc
     - HealthChecksUI__HealthChecks__5__Name=Ordering SignalR
     - HealthChecksUI__HealthChecks__5__Uri=http://ordering-signalr/hc
     - HealthChecksUI__HealthChecks__6__Name=Payment API
     - HealthChecksUI__HealthChecks__6__Uri=http://payment-api/hc
   ports:
    - "5007:80"

  mongo-express:
   image: mongo-express
   container_name: mongo-express
   ports:
    - 8081:8081
   environment:
    ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
    ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
    ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@catalog-data:27017
   depends_on:
    - catalog-data

volumes:
  microshop-catalog-data:
   external: false
  microshop-catalog-integration-data:
   external: false
  microshop-basket-data:
   external: false
  microshop-ordering-data:
   external: false
  microshop-identity-data:
   external: false