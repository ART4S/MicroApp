version: '3.4'

services:

  rabbitmq:
   container_name: rabbitmq
   ports:
    - "15672:15672"

  catalog-data:
   container_name: catalog-data
   environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=${SA_PASSWORD}
   ports:
    - "1433:1433"
   volumes:
    - microshop-catalog-data:/var/opt/mssql

  catalog-api:
    image: catalog-api:dev
    container_name: catalog-api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
      args:
       BUILD_MODE: Debug
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=catalog-data;Database=catalog_db;User Id=sa;Password=${SA_PASSWORD};Persist Security Info=true;
      - RabbitMQSettings__HostName=rabbitmq
      - RabbitMQSettings__ClientName=Catalog,
      - RabbitMQSettings__UserName=${RABBITMQ_USER}
      - RabbitMQSettings__Password=${RABBITMQ_PASSWORD}
      - RabbitMQSettings__Retries=3
    ports:
      - "5000:80"

  basket-data:
   container_name: basket-data
   ports:
     - "6379:6379"
   volumes:
     - microshop-basket-data:/data

  basket-api:
   image: basket-api:dev
   container_name: basket-api
   build:
    context: .
    dockerfile: Services/Basket/Basket.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - ConnectionStrings__RedisConnection=basket-data
     - RabbitMQSettings__HostName=rabbitmq
     - RabbitMQSettings__ClientName=Basket,
     - RabbitMQSettings__UserName=${RABBITMQ_USER}
     - RabbitMQSettings__Password=${RABBITMQ_PASSWORD}
     - RabbitMQSettings__Retries=3
   ports:
     - "5001:80"

  ordering-data:
   container_name: ordering-data
   environment:
    - ACCEPT_EULA=Y
    - SA_PASSWORD=${SA_PASSWORD}
   ports:
    - "1434:1433"
   volumes:
    - microshop-ordering-data:/var/opt/mssql

  ordering-api:
   image: ordering-api:dev
   container_name: ordering-api
   build:
    context: .
    dockerfile: Services/Ordering/Ordering.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - ConnectionStrings__DefaultConnection=Server=ordering-data;Database=ordering_db;User Id=sa;Password=${SA_PASSWORD};Persist Security Info=true;
     - RabbitMQSettings__HostName=rabbitmq
     - RabbitMQSettings__ClientName=Ordering,
     - RabbitMQSettings__UserName=${RABBITMQ_USER}
     - RabbitMQSettings__Password=${RABBITMQ_PASSWORD}
     - RabbitMQSettings__Retries=3
   ports:
    - "5002:80"

  payment-api:
   image: payment-api:dev
   container_name: payment-api
   build:
    context: .
    dockerfile: Services/Payment/Payment.API/Dockerfile
    args:
     BUILD_MODE: Debug
   environment:
     - ASPNETCORE_ENVIRONMENT=Development
     - ASPNETCORE_URLS=http://+:80
     - RabbitMQSettings__HostName=rabbitmq
     - RabbitMQSettings__ClientName=Payment,
     - RabbitMQSettings__UserName=${RABBITMQ_USER}
     - RabbitMQSettings__Password=${RABBITMQ_PASSWORD}
     - RabbitMQSettings__Retries=3
   ports:
    - "5003:80"

  #basket-grpcui:
  # image: fullstorydev/grpcui
  # container_name: basket-grpcui
  # command:
  #  - "-plaintext"
  #  - "basket-api:80"
  # ports:
  #   - "8080:8080"
  # depends_on:
  #   - basket-api

volumes:
  microshop-catalog-data:
   external: false
  microshop-basket-data:
   external: false
  microshop-ordering-data:
   external: false